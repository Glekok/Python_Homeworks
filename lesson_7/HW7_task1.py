"""
1) Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод
__init__()), который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде
прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
31 22
37 43
51 86

3 5 32
2 4 6
-1 64 -8

3 5 8 3
8 3 7 1
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в
привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух
объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой
строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""


class Matrix:
    def __init__(self, m_1: list):
        self.m_1 = m_1

    def __str__(self):
        return str('\n'.join(['   '.join([str(el) for el in elements]) for elements in self.m_1]))

    def __add__(self, other):

        for elements in range(len(res_matrix)):
            elements = 0
            for el in range(len(self.m_1)):
                for i in range(len(other.m_1[el])):
                    res_matrix[elements].append(self.m_1[el][i] + other.m_1[el][i])
                elements += 1
            return str('\n'.join(['   '.join([str(el) for el in elements]) for elements in res_matrix]))


mm_1 = Matrix([[31, 22],
               [37, 43],
               [51, 86]])
mm_2 = Matrix([[3, 32],
               [2, 6],
               [-1, -8]])

res_matrix = [[], [], []]

print(f"Матрица 1 >>>\n{mm_1}")
print(f"Матрица 2 >>>\n{mm_2}")
print(f"Сумма матриц >>>\033[31m\033[1m\n{mm_1 + mm_2}")
